@charset "UTF-8";
@font-face {
  font-family: "Titillium Web";
  font-display: swap;
  src: url("../fonts/TitilliumWeb-Light.woff2") format("woff2"), url("../fonts/TitilliumWeb-Light.woff") format("woff");
  font-weight: 300;
  font-style: normal;
}
@font-face {
  font-family: "Titillium Web";
  font-display: swap;
  src: url("../fonts/TitilliumWeb-Regular.woff2") format("woff2"), url("../fonts/TitilliumWeb-Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: "Titillium Web";
  font-display: swap;
  src: url("../fonts/TitilliumWeb-SemiBold.woff2") format("woff2"), url("../fonts/TitilliumWeb-SemiBold.woff") format("woff");
  font-weight: 600;
  font-style: normal;
}
@font-face {
  font-family: "Titillium Web";
  font-display: swap;
  src: url("../fonts/TitilliumWeb-Bold.woff2") format("woff2"), url("../fonts/TitilliumWeb-Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
}
* {
  padding: 0px;
  margin: 0px;
  border: 0px;
}

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

:focus,
:active {
  outline: none;
}

a:focus,
a:active {
  outline: none;
}

aside,
nav,
footer,
header,
section {
  display: block;
}

html {
  font-size: 16px;
  font-family: "Titillium Web", sans-serif;
  font-weight: 400;
  line-height: 1.3333;
  letter-spacing: 0.02em;
  color: #111;
}

html,
body {
  height: 100%;
}

body {
  -ms-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  font-size: 1.125rem;
}
@media screen and (max-width: 1112px) {
  body {
    font-size: 1rem;
  }
}
body body._lock {
  overflow: hidden;
}

input,
button,
textarea {
  font-family: "Titillium Web", sans-serif;
  font-size: inherit;
}

input::-ms-clear {
  display: none;
}

button {
  cursor: pointer;
  background-color: inherit;
}

button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

a,
a:visited {
  text-decoration: none;
}

a:hover {
  text-decoration: none;
}

ul li {
  list-style: none;
}

img {
  vertical-align: top;
  -o-object-fit: cover;
     object-fit: cover;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: inherit;
  font-size: inherit;
}

select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: none;
  margin: 0;
  width: 100%;
  font-family: inherit;
  font-size: inherit;
  cursor: inherit;
  line-height: inherit;
  z-index: 1;
  outline: none;
}
select::-ms-expand {
  display: none;
}

/*
&::-webkit-scrollbar {
	display: none;
}
*/
.wrapper {
  max-width: 1920px;
  width: 100%;
  min-height: 100%;
  overflow: hidden;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.container {
  margin: 0 auto;
  max-width: 1360px;
  padding: 0 24px;
}
@media (max-width: 1360px) {
  .container {
    max-width: 1120px;
  }
}
@media (max-width: 1112px) {
  .container {
    max-width: 960px;
    padding: 0 16px;
  }
}
@media (max-width: 968px) {
  .container {
    max-width: 728px;
  }
}
@media (max-width: 728px) {
  .container {
    max-width: 524px;
    padding: 0 12px;
  }
}
@media (max-width: 536px) {
  .container {
    max-width: 348px;
  }
}

.h1 {
  font-size: 2.25rem;
  font-weight: 700;
  line-height: 1.4;
  letter-spacing: 0.06em;
}
@media (max-width: 968px) {
  .h1 {
    font-size: 2.125rem;
  }
}

.h2 {
  font-size: 2rem;
  font-weight: 700;
  line-height: 1.4;
  letter-spacing: 0.06em;
}
@media (max-width: 968px) {
  .h2 {
    font-size: 1.875rem;
    letter-spacing: 0.04em;
  }
}

.h3 {
  font-size: 1.875rem;
  font-weight: 700;
  line-height: 1.4;
  letter-spacing: 0.04em;
}
@media (max-width: 968px) {
  .h3 {
    font-size: 1.625rem;
    font-weight: 600;
  }
}

.h4 {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 1.4;
  letter-spacing: 0.04em;
}
@media (max-width: 968px) {
  .h4 {
    font-size: 1.375rem;
  }
}

.h5 {
  font-size: 1.25rem;
  font-weight: 600;
  line-height: 1.4;
  letter-spacing: 0.04em;
}
@media (max-width: 968px) {
  .h5 {
    font-size: 1.125rem;
  }
}

.output {
  font-size: 1.75rem;
  font-weight: 700;
  line-height: 1.4;
  letter-spacing: 0.08em;
}
@media (max-width: 968px) {
  .output {
    font-size: 1.625rem;
  }
}

.navlink {
  display: inline-block;
  position: relative;
  font-size: 1.25rem;
  font-weight: 600;
  line-height: 1.4;
  letter-spacing: 0.02em;
  color: #FFF;
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
  cursor: pointer;
}
.navlink::after {
  display: block;
  opacity: 0;
  -webkit-transform: 0.5s all;
      -ms-transform: 0.5s all;
          transform: 0.5s all;
}
@media (any-hover: hover) {
  .navlink:hover {
    color: #8685EF;
    -webkit-transition: 0.5s all;
    -o-transition: 0.5s all;
    transition: 0.5s all;
    cursor: pointer;
  }
  .navlink:hover::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -0.3rem;
    opacity: 1;
    width: 100%;
    height: 2px;
    background-color: #8685EF;
  }
  .navlink:hover:active {
    color: #8685EF;
  }
}

.link {
  color: #008BE9;
  text-decoration: underline;
}
@media (any-hover: hover) {
  .link:hover {
    text-decoration: none;
  }
}

.label-text {
  font-size: 0.8rem;
  font-weight: 400;
  line-height: 1.25;
}

.ordered-list {
  counter-reset: myCounter;
}
.ordered-list li {
  list-style: none;
  margin: 0 0 0 1rem;
}
.ordered-list li::before {
  counter-increment: myCounter;
  content: counter(myCounter);
  color: #8685EF;
  display: inline;
  font-weight: 600;
  margin: 0 0.66rem 0 0;
}

.unordered-list li {
  margin: 0.4rem 0;
}
.unordered-list li::before {
  content: "";
  display: inline-block;
  width: 0.4rem;
  height: 0.4rem;
  border-radius: 999px;
  background-color: #8685EF;
  margin: 0rem 0.5rem 0rem 0.5rem;
}

.btn {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding: 0.8rem 1.6rem;
  font-size: 1.25rem;
  font-weight: 600;
  line-height: 1.4;
  letter-spacing: 0.06em;
  border-radius: 4px;
  background-color: #8685EF;
  color: #FFF;
  text-shadow: 0 0 0.33rem rgba(255, 255, 255, 0.25);
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
}
@media (any-hover: hover) {
  .btn:hover {
    background-color: #8584ef;
    text-shadow: none;
    -webkit-box-shadow: inset 0 0 8px 3px rgba(17, 17, 17, 0.25);
            box-shadow: inset 0 0 8px 3px rgba(17, 17, 17, 0.25);
  }
}
.btn:active {
  text-shadow: none;
  -webkit-box-shadow: none;
          box-shadow: none;
}
.btn:disabled {
  color: #676767;
  background-color: #FFF;
  border: 3px solid #676767;
  -webkit-box-shadow: inset 0 0 8px 3px rgba(17, 17, 17, 0.25);
          box-shadow: inset 0 0 8px 3px rgba(17, 17, 17, 0.25);
  cursor: not-allowed;
}
.btn--outline {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  font-weight: 500;
  color: #4A4A4A;
  background-color: #FFF;
  border: 3px solid #8685EF;
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
}
.btn--outline span {
  padding-right: 1rem;
}
.btn--outline svg {
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
  stroke: #4A4A4A;
  stroke-miterlimit: 5;
  width: 1.25rem;
  height: 1.25rem;
}
@media (any-hover: hover) {
  .btn--outline:hover {
    background-color: #FFF;
    border-color: #8584ef;
    -webkit-box-shadow: inset 0 0 8px 3px rgba(17, 17, 17, 0.25);
            box-shadow: inset 0 0 8px 3px rgba(17, 17, 17, 0.25);
    color: #111;
  }
  .btn--outline:hover svg {
    stroke: #111;
  }
}
.btn--outline:active {
  -webkit-box-shadow: none;
          box-shadow: none;
  border-color: #8685EF;
}

.inp {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  min-width: 18rem;
  padding: 0.75rem;
  font-size: 1.25rem;
  font-family: inherit;
  font-weight: 400;
  line-height: 1.4;
  letter-spacing: 0.02em;
  border: 3px solid #4A4A4A;
  border-radius: 4px;
  background-color: #FFF;
  -webkit-transition: 0.6s all;
  -o-transition: 0.6s all;
  transition: 0.6s all;
}
.inp:focus {
  outline: 0;
  border-color: #8685EF;
  -webkit-box-shadow: 0 0 4px 1px rgba(113, 112, 201, 0.5);
          box-shadow: 0 0 4px 1px rgba(113, 112, 201, 0.5);
}
.inp:disabled {
  cursor: not-allowed;
  border-color: #676767;
  -webkit-box-shadow: inset 0 0 8px 3px rgba(17, 17, 17, 0.25);
          box-shadow: inset 0 0 8px 3px rgba(17, 17, 17, 0.25);
}

.radio__input,
.checkbox__input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  position: absolute;
}

.radio {
  position: relative;
}
.radio:not(:first-of-type) {
  margin-top: 1rem;
}
.radio__input {
  width: 1.5rem;
  height: 1.5rem;
}
.radio__label {
  padding-left: 2rem;
  font-size: 1.2rem;
  line-height: 1.4;
  vertical-align: top;
  cursor: pointer;
}
.radio__label:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  width: 1.5rem;
  height: 1.5rem;
  border: 2px solid #8685EF;
  border-radius: 999px;
}
.radio__label::after {
  content: "";
  opacity: 0;
  position: absolute;
  top: 4px;
  left: 4px;
  z-index: 2;
  display: block;
  width: 1rem;
  height: 1rem;
  background-color: #4A4A4A;
  border-radius: 999px;
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
}
.radio__label:hover::before {
  -webkit-box-shadow: 0 0 4px 1px rgba(113, 112, 201, 0.5);
          box-shadow: 0 0 4px 1px rgba(113, 112, 201, 0.5);
}
.radio__input:checked + .radio__label:before {
  border-color: #8685EF;
}
.radio__input:checked + .radio__label:after {
  opacity: 1;
}

.checkbox {
  position: relative;
}
.checkbox:not(:first-of-type) {
  margin-top: 1rem;
}
.checkbox__input:disabled {
  pointer-events: none;
}
.checkbox__label {
  display: block;
  padding-left: 2rem;
  line-height: 1.4;
  font-size: 1rem;
  cursor: pointer;
  -webkit-transition: 0.5s all;
  -o-transition: 0.5s all;
  transition: 0.5s all;
}
.checkbox__label::before {
  content: "";
  position: absolute;
  top: 0px;
  left: 0px;
  z-index: 1;
  display: block;
  width: 1.5rem;
  height: 1.5rem;
  border: 2px solid #8685EF;
  border-radius: 4px;
  background-color: #FFF;
}
.checkbox__label::after {
  content: "✓";
  opacity: 0;
  position: absolute;
  top: -0.05rem;
  left: 0.3rem;
  z-index: 2;
  font-size: 1.2rem;
  color: #111;
  background-size: 12px 12px;
  -webkit-transition: 0.6s all;
  -o-transition: 0.6s all;
  transition: 0.6s all;
}
.checkbox__label:hover::before {
  -webkit-box-shadow: 0 0 4px 1px rgba(113, 112, 201, 0.5);
          box-shadow: 0 0 4px 1px rgba(113, 112, 201, 0.5);
}
.checkbox__input:checked + .checkbox__label::before {
  border-color: #8685EF;
}
.checkbox__input:checked + .checkbox__label::after {
  opacity: 1;
}

.radio__input:disabled ~ .radio__label,
.checkbox__input:disabled ~ .checkbox__label {
  cursor: not-allowed;
}

.radio__input:disabled ~ .radio__label::before,
.checkbox__input:disabled ~ .checkbox__label::before {
  border-color: #676767;
}

.radio__input:disabled,
.radio__input:disabled ~ .radio__label:hover::before,
.checkbox__input:disabled ~ .checkbox__label:hover::before {
  -webkit-box-shadow: none;
          box-shadow: none;
}

.toggle__inner {
  cursor: pointer;
  display: inline-block;
}
.toggle__switch {
  display: inline-block;
  background: transparent;
  border-radius: 999px;
  border: 1px solid #111;
  width: 3rem;
  height: 1.5rem;
  position: relative;
  vertical-align: middle;
}
.toggle__switch:before, .toggle__switch:after {
  content: "";
}
.toggle__switch:before {
  display: block;
  background-color: #111;
  border-radius: 999px;
  width: 0.9rem;
  height: 0.9rem;
  position: absolute;
  top: 0.275rem;
  left: 0.25rem;
  -webkit-transition: left 0.33s;
  -o-transition: left 0.33s;
  transition: left 0.33s;
}
.toggle__checkbox:checked + .toggle__switch {
  background: #00C896;
  border-color: #00C896;
}
.toggle__checkbox:checked + .toggle__switch:before {
  left: 1.75rem;
  background-color: #FAF8FF;
}
.toggle__checkbox {
  position: absolute;
  visibility: hidden;
}
.toggle__label {
  margin-left: 5px;
  position: relative;
  top: 2px;
}
.toggle--disabled .toggle__inner, .toggle--readonly .toggle__inner {
  cursor: not-allowed;
}
.toggle--disabled .toggle__switch {
  border: 1px solid #676767;
}
.toggle--disabled .toggle__switch:before {
  background-color: #676767;
}
.toggle--readonly .toggle__checkbox[disabled=disabled][checked=checked] + .toggle__switch {
  background: #004836;
  border-color: #004836;
}

select {
  padding: 0 1rem 0 0;
}

.select {
  position: relative;
  display: grid;
  grid-template-areas: "select";
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: relative;
  min-width: 9rem;
  max-width: 20rem;
  border: 3px solid #4A4A4A;
  border-radius: 4px;
  padding: 0.75rem;
  font-size: 1.25rem;
  cursor: pointer;
  line-height: 1.333;
  background-color: #FFF;
}
.select select, .select::after {
  grid-area: select;
}
.select::before {
  content: "";
  display: inline-block;
  position: absolute;
  top: 0.6rem;
  right: 2.6rem;
  width: 1px;
  height: 2rem;
  background-color: #676767;
}
.select::after {
  content: "";
  justify-self: end;
  width: 0.75em;
  height: 0.5em;
  background-color: #4A4A4A;
  -webkit-clip-path: polygon(100% 0%, 0 0%, 50% 100%);
          clip-path: polygon(100% 0%, 0 0%, 50% 100%);
}

select:focus + .focus {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 3px solid #8685EF;
  border-radius: inherit;
  -webkit-box-shadow: 0 0 4px 1px rgba(113, 112, 201, 0.5);
          box-shadow: 0 0 4px 1px rgba(113, 112, 201, 0.5);
}

option {
  white-space: normal;
  outline-color: #8685EF;
}

.select--disabled {
  cursor: not-allowed;
  -webkit-box-shadow: inset 0 0 8px 3px rgba(17, 17, 17, 0.25);
          box-shadow: inset 0 0 8px 3px rgba(17, 17, 17, 0.25);
}

.form-conroller__message {
  display: block;
  visibility: hidden;
  height: 0;
}

.form-conroller__message._active {
  visibility: visible;
  height: auto;
}

.select {
  position: relative;
}
.select__item {
  position: relative;
}
.select__title {
  color: #FAF8FF;
  cursor: pointer;
}
.select__value {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-size: 16px;
  height: 30px;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}
.select__value span {
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
}
.select__value::before {
  content: "";
  display: inline-block;
  -webkit-transition: all 0.3s ease 0s;
  -o-transition: all 0.3s ease 0s;
  transition: all 0.3s ease 0s;
  margin-left: 5px;
  width: 20px;
  height: 20px;
  background: url("") center/100% no-repeat;
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
}
@media (max-width: 728px) {
  .select__value::before {
    margin-left: 3px;
  }
}
.select__options {
  display: none;
  position: absolute;
  top: 30px;
  min-width: 100%;
  left: 0;
  color: #FAF8FF;
  font-size: 16px;
  background-color: #FAF8FF;
}
.select__option {
  text-align: center;
  cursor: pointer;
  padding: 3px 12px;
  border-top: 1px solid #8685EF;
  margin: 0px 0px 0px 0px;
}
.select._active {
  z-index: 5;
}
.select._active .select__value::before {
  -webkit-transform: rotate(-180deg);
      -ms-transform: rotate(-180deg);
          transform: rotate(-180deg);
}
.select._active.select__options {
  display: block;
}

html::-webkit-scrollbar {
  width: 0.75rem;
}

html::-webkit-scrollbar-track {
  background-color: lightgray;
}

html::-webkit-scrollbar-thumb {
  background: darkgrey;
  border-radius: 999px;
}

.preloader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #fff;
  z-index: 100;
}

.loader {
  margin: 200px auto 0;
  font-size: 32px;
  text-align: center;
  color: #000;
  text-transform: uppercase;
}

.loaded-hiding .preloader {
  -webkit-transition: 0.3s opacity;
  -o-transition: 0.3s opacity;
  transition: 0.3s opacity;
  opacity: 0;
}

.loaded .preloader {
  display: none;
}

.promo {
  min-height: 100vh;
  padding: 40px 0;
  background-color: #111;
}

.form-wrapper {
  width: 400px;
  max-width: 100%;
  background-color: #f9f9f9;
  border-radius: 4px;
  -webkit-box-shadow: 0 2px 5px rgba(17, 17, 17, 0.3);
          box-shadow: 0 2px 5px rgba(17, 17, 17, 0.3);
}

.form {
  padding: 30px;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */